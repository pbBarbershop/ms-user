openapi: 3.0.1
info:
  title: MS User
  description: Microsserviço de usuários da barbearia
  version: 1.0.0
servers:
  - url: http://localhost:8081/api/barbershop
paths:
  /user/{id}:
    get:
      tags:
        - User
      summary: Buscar usuário por ID
      operationId: findById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
    put:
      tags:
        - User
      summary: Atualizar usuário
      operationId: update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
    delete:
      tags:
        - User
      summary: Excluir usuário
      operationId: deleteUserId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
  /user:
    get:
      tags:
        - User
      summary: Listar usuários
      operationId: findAll
      parameters:
        - name: name
          in: query
          required: false
          schema:
            type: string
        - name: pageable
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageableDTO'
    post:
      tags:
        - User
      summary: Cadastrar usuário
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
  /auth/login:
    post:
      tags:
        - Login
      summary: Autenticar usuário
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
components:
  schemas:
    UserDTO:
      required:
        - name
        - password
        - phone
        - profileName
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          pattern: ^([a-zA-ZãÃéÉíÍóÓêÊôÔáÁ ])+$
          type: string
        email:
          type: string
        phone:
          pattern: ^([0-9])+$
          type: string
        description:
          type: string
        password:
          type: string
        profileName:
          pattern: (Manager|Customer|Employee)
          type: string
    UserResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
        phone:
          type: string
        description:
          type: string
        profileName:
          type: string
    LoginDTO:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    Pageable:
      type: object
      properties:
        page:
          minimum: 0
          type: integer
          format: int32
        size:
          minimum: 1
          type: integer
          format: int32
        sort:
          type: array
          items:
            type: string
    PageableDTO:
      type: object
      properties:
        numberOfElements:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        usersResponse:
          type: array
          items:
            $ref: '#/components/schemas/UserResponseGetAll'
    UserResponseGetAll:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
        phone:
          type: string
        document:
          type: string
